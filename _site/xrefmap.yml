### YamlMime:XRefMap
sorted: true
references:
- uid: AccountService.Controllers
  name: AccountService.Controllers
  href: api/AccountService.Controllers.html
  commentId: N:AccountService.Controllers
  fullName: AccountService.Controllers
  nameWithType: AccountService.Controllers
- uid: AccountService.Controllers.AccountsController
  name: AccountsController
  href: api/AccountService.Controllers.AccountsController.html
  commentId: T:AccountService.Controllers.AccountsController
  fullName: AccountService.Controllers.AccountsController
  nameWithType: AccountsController
- uid: AccountService.Controllers.AccountsController.#ctor(AccountService.Services.IAccountService)
  name: AccountsController(IAccountService)
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController__ctor_AccountService_Services_IAccountService_
  commentId: M:AccountService.Controllers.AccountsController.#ctor(AccountService.Services.IAccountService)
  name.vb: New(IAccountService)
  fullName: AccountService.Controllers.AccountsController.AccountsController(AccountService.Services.IAccountService)
  fullName.vb: AccountService.Controllers.AccountsController.New(AccountService.Services.IAccountService)
  nameWithType: AccountsController.AccountsController(IAccountService)
  nameWithType.vb: AccountsController.New(IAccountService)
- uid: AccountService.Controllers.AccountsController.#ctor*
  name: AccountsController
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController__ctor_
  commentId: Overload:AccountService.Controllers.AccountsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AccountService.Controllers.AccountsController.AccountsController
  fullName.vb: AccountService.Controllers.AccountsController.New
  nameWithType: AccountsController.AccountsController
  nameWithType.vb: AccountsController.New
- uid: AccountService.Controllers.AccountsController.CreateAccount(AccountService.DTOs.CreateAccountDto)
  name: CreateAccount(CreateAccountDto)
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_CreateAccount_AccountService_DTOs_CreateAccountDto_
  commentId: M:AccountService.Controllers.AccountsController.CreateAccount(AccountService.DTOs.CreateAccountDto)
  fullName: AccountService.Controllers.AccountsController.CreateAccount(AccountService.DTOs.CreateAccountDto)
  nameWithType: AccountsController.CreateAccount(CreateAccountDto)
- uid: AccountService.Controllers.AccountsController.CreateAccount*
  name: CreateAccount
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_CreateAccount_
  commentId: Overload:AccountService.Controllers.AccountsController.CreateAccount
  isSpec: "True"
  fullName: AccountService.Controllers.AccountsController.CreateAccount
  nameWithType: AccountsController.CreateAccount
- uid: AccountService.Controllers.AccountsController.DeleteAccount(System.String)
  name: DeleteAccount(string)
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_DeleteAccount_System_String_
  commentId: M:AccountService.Controllers.AccountsController.DeleteAccount(System.String)
  name.vb: DeleteAccount(String)
  fullName: AccountService.Controllers.AccountsController.DeleteAccount(string)
  fullName.vb: AccountService.Controllers.AccountsController.DeleteAccount(String)
  nameWithType: AccountsController.DeleteAccount(string)
  nameWithType.vb: AccountsController.DeleteAccount(String)
- uid: AccountService.Controllers.AccountsController.DeleteAccount*
  name: DeleteAccount
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_DeleteAccount_
  commentId: Overload:AccountService.Controllers.AccountsController.DeleteAccount
  isSpec: "True"
  fullName: AccountService.Controllers.AccountsController.DeleteAccount
  nameWithType: AccountsController.DeleteAccount
- uid: AccountService.Controllers.AccountsController.GetAccount(System.String)
  name: GetAccount(string)
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_GetAccount_System_String_
  commentId: M:AccountService.Controllers.AccountsController.GetAccount(System.String)
  name.vb: GetAccount(String)
  fullName: AccountService.Controllers.AccountsController.GetAccount(string)
  fullName.vb: AccountService.Controllers.AccountsController.GetAccount(String)
  nameWithType: AccountsController.GetAccount(string)
  nameWithType.vb: AccountsController.GetAccount(String)
- uid: AccountService.Controllers.AccountsController.GetAccount*
  name: GetAccount
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_GetAccount_
  commentId: Overload:AccountService.Controllers.AccountsController.GetAccount
  isSpec: "True"
  fullName: AccountService.Controllers.AccountsController.GetAccount
  nameWithType: AccountsController.GetAccount
- uid: AccountService.Controllers.AccountsController.GetAllAccounts
  name: GetAllAccounts()
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_GetAllAccounts
  commentId: M:AccountService.Controllers.AccountsController.GetAllAccounts
  fullName: AccountService.Controllers.AccountsController.GetAllAccounts()
  nameWithType: AccountsController.GetAllAccounts()
- uid: AccountService.Controllers.AccountsController.GetAllAccounts*
  name: GetAllAccounts
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_GetAllAccounts_
  commentId: Overload:AccountService.Controllers.AccountsController.GetAllAccounts
  isSpec: "True"
  fullName: AccountService.Controllers.AccountsController.GetAllAccounts
  nameWithType: AccountsController.GetAllAccounts
- uid: AccountService.Controllers.AccountsController.UpdateAccount(System.String,AccountService.DTOs.UpdateAccountDto)
  name: UpdateAccount(string, UpdateAccountDto)
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_UpdateAccount_System_String_AccountService_DTOs_UpdateAccountDto_
  commentId: M:AccountService.Controllers.AccountsController.UpdateAccount(System.String,AccountService.DTOs.UpdateAccountDto)
  name.vb: UpdateAccount(String, UpdateAccountDto)
  fullName: AccountService.Controllers.AccountsController.UpdateAccount(string, AccountService.DTOs.UpdateAccountDto)
  fullName.vb: AccountService.Controllers.AccountsController.UpdateAccount(String, AccountService.DTOs.UpdateAccountDto)
  nameWithType: AccountsController.UpdateAccount(string, UpdateAccountDto)
  nameWithType.vb: AccountsController.UpdateAccount(String, UpdateAccountDto)
- uid: AccountService.Controllers.AccountsController.UpdateAccount*
  name: UpdateAccount
  href: api/AccountService.Controllers.AccountsController.html#AccountService_Controllers_AccountsController_UpdateAccount_
  commentId: Overload:AccountService.Controllers.AccountsController.UpdateAccount
  isSpec: "True"
  fullName: AccountService.Controllers.AccountsController.UpdateAccount
  nameWithType: AccountsController.UpdateAccount
- uid: AccountService.DTOs
  name: AccountService.DTOs
  href: api/AccountService.DTOs.html
  commentId: N:AccountService.DTOs
  fullName: AccountService.DTOs
  nameWithType: AccountService.DTOs
- uid: AccountService.DTOs.AccountDto
  name: AccountDto
  href: api/AccountService.DTOs.AccountDto.html
  commentId: T:AccountService.DTOs.AccountDto
  fullName: AccountService.DTOs.AccountDto
  nameWithType: AccountDto
- uid: AccountService.DTOs.AccountDto.AccountNumber
  name: AccountNumber
  href: api/AccountService.DTOs.AccountDto.html#AccountService_DTOs_AccountDto_AccountNumber
  commentId: P:AccountService.DTOs.AccountDto.AccountNumber
  fullName: AccountService.DTOs.AccountDto.AccountNumber
  nameWithType: AccountDto.AccountNumber
- uid: AccountService.DTOs.AccountDto.AccountNumber*
  name: AccountNumber
  href: api/AccountService.DTOs.AccountDto.html#AccountService_DTOs_AccountDto_AccountNumber_
  commentId: Overload:AccountService.DTOs.AccountDto.AccountNumber
  isSpec: "True"
  fullName: AccountService.DTOs.AccountDto.AccountNumber
  nameWithType: AccountDto.AccountNumber
- uid: AccountService.DTOs.AccountDto.AccountType
  name: AccountType
  href: api/AccountService.DTOs.AccountDto.html#AccountService_DTOs_AccountDto_AccountType
  commentId: P:AccountService.DTOs.AccountDto.AccountType
  fullName: AccountService.DTOs.AccountDto.AccountType
  nameWithType: AccountDto.AccountType
- uid: AccountService.DTOs.AccountDto.AccountType*
  name: AccountType
  href: api/AccountService.DTOs.AccountDto.html#AccountService_DTOs_AccountDto_AccountType_
  commentId: Overload:AccountService.DTOs.AccountDto.AccountType
  isSpec: "True"
  fullName: AccountService.DTOs.AccountDto.AccountType
  nameWithType: AccountDto.AccountType
- uid: AccountService.DTOs.AccountDto.Balance
  name: Balance
  href: api/AccountService.DTOs.AccountDto.html#AccountService_DTOs_AccountDto_Balance
  commentId: P:AccountService.DTOs.AccountDto.Balance
  fullName: AccountService.DTOs.AccountDto.Balance
  nameWithType: AccountDto.Balance
- uid: AccountService.DTOs.AccountDto.Balance*
  name: Balance
  href: api/AccountService.DTOs.AccountDto.html#AccountService_DTOs_AccountDto_Balance_
  commentId: Overload:AccountService.DTOs.AccountDto.Balance
  isSpec: "True"
  fullName: AccountService.DTOs.AccountDto.Balance
  nameWithType: AccountDto.Balance
- uid: AccountService.DTOs.AccountDto.Id
  name: Id
  href: api/AccountService.DTOs.AccountDto.html#AccountService_DTOs_AccountDto_Id
  commentId: P:AccountService.DTOs.AccountDto.Id
  fullName: AccountService.DTOs.AccountDto.Id
  nameWithType: AccountDto.Id
- uid: AccountService.DTOs.AccountDto.Id*
  name: Id
  href: api/AccountService.DTOs.AccountDto.html#AccountService_DTOs_AccountDto_Id_
  commentId: Overload:AccountService.DTOs.AccountDto.Id
  isSpec: "True"
  fullName: AccountService.DTOs.AccountDto.Id
  nameWithType: AccountDto.Id
- uid: AccountService.DTOs.CreateAccountDto
  name: CreateAccountDto
  href: api/AccountService.DTOs.CreateAccountDto.html
  commentId: T:AccountService.DTOs.CreateAccountDto
  fullName: AccountService.DTOs.CreateAccountDto
  nameWithType: CreateAccountDto
- uid: AccountService.DTOs.CreateAccountDto.AccountType
  name: AccountType
  href: api/AccountService.DTOs.CreateAccountDto.html#AccountService_DTOs_CreateAccountDto_AccountType
  commentId: P:AccountService.DTOs.CreateAccountDto.AccountType
  fullName: AccountService.DTOs.CreateAccountDto.AccountType
  nameWithType: CreateAccountDto.AccountType
- uid: AccountService.DTOs.CreateAccountDto.AccountType*
  name: AccountType
  href: api/AccountService.DTOs.CreateAccountDto.html#AccountService_DTOs_CreateAccountDto_AccountType_
  commentId: Overload:AccountService.DTOs.CreateAccountDto.AccountType
  isSpec: "True"
  fullName: AccountService.DTOs.CreateAccountDto.AccountType
  nameWithType: CreateAccountDto.AccountType
- uid: AccountService.DTOs.CreateAccountDto.CustomerId
  name: CustomerId
  href: api/AccountService.DTOs.CreateAccountDto.html#AccountService_DTOs_CreateAccountDto_CustomerId
  commentId: P:AccountService.DTOs.CreateAccountDto.CustomerId
  fullName: AccountService.DTOs.CreateAccountDto.CustomerId
  nameWithType: CreateAccountDto.CustomerId
- uid: AccountService.DTOs.CreateAccountDto.CustomerId*
  name: CustomerId
  href: api/AccountService.DTOs.CreateAccountDto.html#AccountService_DTOs_CreateAccountDto_CustomerId_
  commentId: Overload:AccountService.DTOs.CreateAccountDto.CustomerId
  isSpec: "True"
  fullName: AccountService.DTOs.CreateAccountDto.CustomerId
  nameWithType: CreateAccountDto.CustomerId
- uid: AccountService.DTOs.UpdateAccountDto
  name: UpdateAccountDto
  href: api/AccountService.DTOs.UpdateAccountDto.html
  commentId: T:AccountService.DTOs.UpdateAccountDto
  fullName: AccountService.DTOs.UpdateAccountDto
  nameWithType: UpdateAccountDto
- uid: AccountService.DTOs.UpdateAccountDto.AccountType
  name: AccountType
  href: api/AccountService.DTOs.UpdateAccountDto.html#AccountService_DTOs_UpdateAccountDto_AccountType
  commentId: P:AccountService.DTOs.UpdateAccountDto.AccountType
  fullName: AccountService.DTOs.UpdateAccountDto.AccountType
  nameWithType: UpdateAccountDto.AccountType
- uid: AccountService.DTOs.UpdateAccountDto.AccountType*
  name: AccountType
  href: api/AccountService.DTOs.UpdateAccountDto.html#AccountService_DTOs_UpdateAccountDto_AccountType_
  commentId: Overload:AccountService.DTOs.UpdateAccountDto.AccountType
  isSpec: "True"
  fullName: AccountService.DTOs.UpdateAccountDto.AccountType
  nameWithType: UpdateAccountDto.AccountType
- uid: AccountService.DTOs.UpdateAccountDto.Balance
  name: Balance
  href: api/AccountService.DTOs.UpdateAccountDto.html#AccountService_DTOs_UpdateAccountDto_Balance
  commentId: P:AccountService.DTOs.UpdateAccountDto.Balance
  fullName: AccountService.DTOs.UpdateAccountDto.Balance
  nameWithType: UpdateAccountDto.Balance
- uid: AccountService.DTOs.UpdateAccountDto.Balance*
  name: Balance
  href: api/AccountService.DTOs.UpdateAccountDto.html#AccountService_DTOs_UpdateAccountDto_Balance_
  commentId: Overload:AccountService.DTOs.UpdateAccountDto.Balance
  isSpec: "True"
  fullName: AccountService.DTOs.UpdateAccountDto.Balance
  nameWithType: UpdateAccountDto.Balance
- uid: AccountService.Data
  name: AccountService.Data
  href: api/AccountService.Data.html
  commentId: N:AccountService.Data
  fullName: AccountService.Data
  nameWithType: AccountService.Data
- uid: AccountService.Data.ApplicationDbContext
  name: ApplicationDbContext
  href: api/AccountService.Data.ApplicationDbContext.html
  commentId: T:AccountService.Data.ApplicationDbContext
  fullName: AccountService.Data.ApplicationDbContext
  nameWithType: ApplicationDbContext
- uid: AccountService.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{AccountService.Data.ApplicationDbContext})
  name: ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_AccountService_Data_ApplicationDbContext__
  commentId: M:AccountService.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{AccountService.Data.ApplicationDbContext})
  name.vb: New(DbContextOptions(Of ApplicationDbContext))
  fullName: AccountService.Data.ApplicationDbContext.ApplicationDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<AccountService.Data.ApplicationDbContext>)
  fullName.vb: AccountService.Data.ApplicationDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of AccountService.Data.ApplicationDbContext))
  nameWithType: ApplicationDbContext.ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  nameWithType.vb: ApplicationDbContext.New(DbContextOptions(Of ApplicationDbContext))
- uid: AccountService.Data.ApplicationDbContext.#ctor*
  name: ApplicationDbContext
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext__ctor_
  commentId: Overload:AccountService.Data.ApplicationDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AccountService.Data.ApplicationDbContext.ApplicationDbContext
  fullName.vb: AccountService.Data.ApplicationDbContext.New
  nameWithType: ApplicationDbContext.ApplicationDbContext
  nameWithType.vb: ApplicationDbContext.New
- uid: AccountService.Data.ApplicationDbContext.Accounts
  name: Accounts
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext_Accounts
  commentId: P:AccountService.Data.ApplicationDbContext.Accounts
  fullName: AccountService.Data.ApplicationDbContext.Accounts
  nameWithType: ApplicationDbContext.Accounts
- uid: AccountService.Data.ApplicationDbContext.Accounts*
  name: Accounts
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext_Accounts_
  commentId: Overload:AccountService.Data.ApplicationDbContext.Accounts
  isSpec: "True"
  fullName: AccountService.Data.ApplicationDbContext.Accounts
  nameWithType: ApplicationDbContext.Accounts
- uid: AccountService.Data.ApplicationDbContext.Customers
  name: Customers
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext_Customers
  commentId: P:AccountService.Data.ApplicationDbContext.Customers
  fullName: AccountService.Data.ApplicationDbContext.Customers
  nameWithType: ApplicationDbContext.Customers
- uid: AccountService.Data.ApplicationDbContext.Customers*
  name: Customers
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext_Customers_
  commentId: Overload:AccountService.Data.ApplicationDbContext.Customers
  isSpec: "True"
  fullName: AccountService.Data.ApplicationDbContext.Customers
  nameWithType: ApplicationDbContext.Customers
- uid: AccountService.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:AccountService.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: AccountService.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: ApplicationDbContext.OnModelCreating(ModelBuilder)
- uid: AccountService.Data.ApplicationDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext_OnModelCreating_
  commentId: Overload:AccountService.Data.ApplicationDbContext.OnModelCreating
  isSpec: "True"
  fullName: AccountService.Data.ApplicationDbContext.OnModelCreating
  nameWithType: ApplicationDbContext.OnModelCreating
- uid: AccountService.Data.ApplicationDbContext.Transactions
  name: Transactions
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext_Transactions
  commentId: P:AccountService.Data.ApplicationDbContext.Transactions
  fullName: AccountService.Data.ApplicationDbContext.Transactions
  nameWithType: ApplicationDbContext.Transactions
- uid: AccountService.Data.ApplicationDbContext.Transactions*
  name: Transactions
  href: api/AccountService.Data.ApplicationDbContext.html#AccountService_Data_ApplicationDbContext_Transactions_
  commentId: Overload:AccountService.Data.ApplicationDbContext.Transactions
  isSpec: "True"
  fullName: AccountService.Data.ApplicationDbContext.Transactions
  nameWithType: ApplicationDbContext.Transactions
- uid: AccountService.Models
  name: AccountService.Models
  href: api/AccountService.Models.html
  commentId: N:AccountService.Models
  fullName: AccountService.Models
  nameWithType: AccountService.Models
- uid: AccountService.Models.Account
  name: Account
  href: api/AccountService.Models.Account.html
  commentId: T:AccountService.Models.Account
  fullName: AccountService.Models.Account
  nameWithType: Account
- uid: AccountService.Models.Account.AccountNumber
  name: AccountNumber
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_AccountNumber
  commentId: P:AccountService.Models.Account.AccountNumber
  fullName: AccountService.Models.Account.AccountNumber
  nameWithType: Account.AccountNumber
- uid: AccountService.Models.Account.AccountNumber*
  name: AccountNumber
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_AccountNumber_
  commentId: Overload:AccountService.Models.Account.AccountNumber
  isSpec: "True"
  fullName: AccountService.Models.Account.AccountNumber
  nameWithType: Account.AccountNumber
- uid: AccountService.Models.Account.AccountType
  name: AccountType
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_AccountType
  commentId: P:AccountService.Models.Account.AccountType
  fullName: AccountService.Models.Account.AccountType
  nameWithType: Account.AccountType
- uid: AccountService.Models.Account.AccountType*
  name: AccountType
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_AccountType_
  commentId: Overload:AccountService.Models.Account.AccountType
  isSpec: "True"
  fullName: AccountService.Models.Account.AccountType
  nameWithType: Account.AccountType
- uid: AccountService.Models.Account.Balance
  name: Balance
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_Balance
  commentId: P:AccountService.Models.Account.Balance
  fullName: AccountService.Models.Account.Balance
  nameWithType: Account.Balance
- uid: AccountService.Models.Account.Balance*
  name: Balance
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_Balance_
  commentId: Overload:AccountService.Models.Account.Balance
  isSpec: "True"
  fullName: AccountService.Models.Account.Balance
  nameWithType: Account.Balance
- uid: AccountService.Models.Account.CreatedAt
  name: CreatedAt
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_CreatedAt
  commentId: P:AccountService.Models.Account.CreatedAt
  fullName: AccountService.Models.Account.CreatedAt
  nameWithType: Account.CreatedAt
- uid: AccountService.Models.Account.CreatedAt*
  name: CreatedAt
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_CreatedAt_
  commentId: Overload:AccountService.Models.Account.CreatedAt
  isSpec: "True"
  fullName: AccountService.Models.Account.CreatedAt
  nameWithType: Account.CreatedAt
- uid: AccountService.Models.Account.Customer
  name: Customer
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_Customer
  commentId: P:AccountService.Models.Account.Customer
  fullName: AccountService.Models.Account.Customer
  nameWithType: Account.Customer
- uid: AccountService.Models.Account.Customer*
  name: Customer
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_Customer_
  commentId: Overload:AccountService.Models.Account.Customer
  isSpec: "True"
  fullName: AccountService.Models.Account.Customer
  nameWithType: Account.Customer
- uid: AccountService.Models.Account.CustomerId
  name: CustomerId
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_CustomerId
  commentId: P:AccountService.Models.Account.CustomerId
  fullName: AccountService.Models.Account.CustomerId
  nameWithType: Account.CustomerId
- uid: AccountService.Models.Account.CustomerId*
  name: CustomerId
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_CustomerId_
  commentId: Overload:AccountService.Models.Account.CustomerId
  isSpec: "True"
  fullName: AccountService.Models.Account.CustomerId
  nameWithType: Account.CustomerId
- uid: AccountService.Models.Account.Id
  name: Id
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_Id
  commentId: P:AccountService.Models.Account.Id
  fullName: AccountService.Models.Account.Id
  nameWithType: Account.Id
- uid: AccountService.Models.Account.Id*
  name: Id
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_Id_
  commentId: Overload:AccountService.Models.Account.Id
  isSpec: "True"
  fullName: AccountService.Models.Account.Id
  nameWithType: Account.Id
- uid: AccountService.Models.Account.IncomingTransactions
  name: IncomingTransactions
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_IncomingTransactions
  commentId: P:AccountService.Models.Account.IncomingTransactions
  fullName: AccountService.Models.Account.IncomingTransactions
  nameWithType: Account.IncomingTransactions
- uid: AccountService.Models.Account.IncomingTransactions*
  name: IncomingTransactions
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_IncomingTransactions_
  commentId: Overload:AccountService.Models.Account.IncomingTransactions
  isSpec: "True"
  fullName: AccountService.Models.Account.IncomingTransactions
  nameWithType: Account.IncomingTransactions
- uid: AccountService.Models.Account.OutgoingTransactions
  name: OutgoingTransactions
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_OutgoingTransactions
  commentId: P:AccountService.Models.Account.OutgoingTransactions
  fullName: AccountService.Models.Account.OutgoingTransactions
  nameWithType: Account.OutgoingTransactions
- uid: AccountService.Models.Account.OutgoingTransactions*
  name: OutgoingTransactions
  href: api/AccountService.Models.Account.html#AccountService_Models_Account_OutgoingTransactions_
  commentId: Overload:AccountService.Models.Account.OutgoingTransactions
  isSpec: "True"
  fullName: AccountService.Models.Account.OutgoingTransactions
  nameWithType: Account.OutgoingTransactions
- uid: AccountService.Models.Customer
  name: Customer
  href: api/AccountService.Models.Customer.html
  commentId: T:AccountService.Models.Customer
  fullName: AccountService.Models.Customer
  nameWithType: Customer
- uid: AccountService.Models.Customer.Accounts
  name: Accounts
  href: api/AccountService.Models.Customer.html#AccountService_Models_Customer_Accounts
  commentId: P:AccountService.Models.Customer.Accounts
  fullName: AccountService.Models.Customer.Accounts
  nameWithType: Customer.Accounts
- uid: AccountService.Models.Customer.Accounts*
  name: Accounts
  href: api/AccountService.Models.Customer.html#AccountService_Models_Customer_Accounts_
  commentId: Overload:AccountService.Models.Customer.Accounts
  isSpec: "True"
  fullName: AccountService.Models.Customer.Accounts
  nameWithType: Customer.Accounts
- uid: AccountService.Models.Customer.Email
  name: Email
  href: api/AccountService.Models.Customer.html#AccountService_Models_Customer_Email
  commentId: P:AccountService.Models.Customer.Email
  fullName: AccountService.Models.Customer.Email
  nameWithType: Customer.Email
- uid: AccountService.Models.Customer.Email*
  name: Email
  href: api/AccountService.Models.Customer.html#AccountService_Models_Customer_Email_
  commentId: Overload:AccountService.Models.Customer.Email
  isSpec: "True"
  fullName: AccountService.Models.Customer.Email
  nameWithType: Customer.Email
- uid: AccountService.Models.Customer.Id
  name: Id
  href: api/AccountService.Models.Customer.html#AccountService_Models_Customer_Id
  commentId: P:AccountService.Models.Customer.Id
  fullName: AccountService.Models.Customer.Id
  nameWithType: Customer.Id
- uid: AccountService.Models.Customer.Id*
  name: Id
  href: api/AccountService.Models.Customer.html#AccountService_Models_Customer_Id_
  commentId: Overload:AccountService.Models.Customer.Id
  isSpec: "True"
  fullName: AccountService.Models.Customer.Id
  nameWithType: Customer.Id
- uid: AccountService.Models.Customer.Name
  name: Name
  href: api/AccountService.Models.Customer.html#AccountService_Models_Customer_Name
  commentId: P:AccountService.Models.Customer.Name
  fullName: AccountService.Models.Customer.Name
  nameWithType: Customer.Name
- uid: AccountService.Models.Customer.Name*
  name: Name
  href: api/AccountService.Models.Customer.html#AccountService_Models_Customer_Name_
  commentId: Overload:AccountService.Models.Customer.Name
  isSpec: "True"
  fullName: AccountService.Models.Customer.Name
  nameWithType: Customer.Name
- uid: AccountService.Models.Transaction
  name: Transaction
  href: api/AccountService.Models.Transaction.html
  commentId: T:AccountService.Models.Transaction
  fullName: AccountService.Models.Transaction
  nameWithType: Transaction
- uid: AccountService.Models.Transaction.Amount
  name: Amount
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_Amount
  commentId: P:AccountService.Models.Transaction.Amount
  fullName: AccountService.Models.Transaction.Amount
  nameWithType: Transaction.Amount
- uid: AccountService.Models.Transaction.Amount*
  name: Amount
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_Amount_
  commentId: Overload:AccountService.Models.Transaction.Amount
  isSpec: "True"
  fullName: AccountService.Models.Transaction.Amount
  nameWithType: Transaction.Amount
- uid: AccountService.Models.Transaction.FromAccount
  name: FromAccount
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_FromAccount
  commentId: P:AccountService.Models.Transaction.FromAccount
  fullName: AccountService.Models.Transaction.FromAccount
  nameWithType: Transaction.FromAccount
- uid: AccountService.Models.Transaction.FromAccount*
  name: FromAccount
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_FromAccount_
  commentId: Overload:AccountService.Models.Transaction.FromAccount
  isSpec: "True"
  fullName: AccountService.Models.Transaction.FromAccount
  nameWithType: Transaction.FromAccount
- uid: AccountService.Models.Transaction.FromAccountId
  name: FromAccountId
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_FromAccountId
  commentId: P:AccountService.Models.Transaction.FromAccountId
  fullName: AccountService.Models.Transaction.FromAccountId
  nameWithType: Transaction.FromAccountId
- uid: AccountService.Models.Transaction.FromAccountId*
  name: FromAccountId
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_FromAccountId_
  commentId: Overload:AccountService.Models.Transaction.FromAccountId
  isSpec: "True"
  fullName: AccountService.Models.Transaction.FromAccountId
  nameWithType: Transaction.FromAccountId
- uid: AccountService.Models.Transaction.Id
  name: Id
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_Id
  commentId: P:AccountService.Models.Transaction.Id
  fullName: AccountService.Models.Transaction.Id
  nameWithType: Transaction.Id
- uid: AccountService.Models.Transaction.Id*
  name: Id
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_Id_
  commentId: Overload:AccountService.Models.Transaction.Id
  isSpec: "True"
  fullName: AccountService.Models.Transaction.Id
  nameWithType: Transaction.Id
- uid: AccountService.Models.Transaction.Timestamp
  name: Timestamp
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_Timestamp
  commentId: P:AccountService.Models.Transaction.Timestamp
  fullName: AccountService.Models.Transaction.Timestamp
  nameWithType: Transaction.Timestamp
- uid: AccountService.Models.Transaction.Timestamp*
  name: Timestamp
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_Timestamp_
  commentId: Overload:AccountService.Models.Transaction.Timestamp
  isSpec: "True"
  fullName: AccountService.Models.Transaction.Timestamp
  nameWithType: Transaction.Timestamp
- uid: AccountService.Models.Transaction.ToAccount
  name: ToAccount
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_ToAccount
  commentId: P:AccountService.Models.Transaction.ToAccount
  fullName: AccountService.Models.Transaction.ToAccount
  nameWithType: Transaction.ToAccount
- uid: AccountService.Models.Transaction.ToAccount*
  name: ToAccount
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_ToAccount_
  commentId: Overload:AccountService.Models.Transaction.ToAccount
  isSpec: "True"
  fullName: AccountService.Models.Transaction.ToAccount
  nameWithType: Transaction.ToAccount
- uid: AccountService.Models.Transaction.ToAccountId
  name: ToAccountId
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_ToAccountId
  commentId: P:AccountService.Models.Transaction.ToAccountId
  fullName: AccountService.Models.Transaction.ToAccountId
  nameWithType: Transaction.ToAccountId
- uid: AccountService.Models.Transaction.ToAccountId*
  name: ToAccountId
  href: api/AccountService.Models.Transaction.html#AccountService_Models_Transaction_ToAccountId_
  commentId: Overload:AccountService.Models.Transaction.ToAccountId
  isSpec: "True"
  fullName: AccountService.Models.Transaction.ToAccountId
  nameWithType: Transaction.ToAccountId
- uid: AccountService.Repositories
  name: AccountService.Repositories
  href: api/AccountService.Repositories.html
  commentId: N:AccountService.Repositories
  fullName: AccountService.Repositories
  nameWithType: AccountService.Repositories
- uid: AccountService.Repositories.AccountRepository
  name: AccountRepository
  href: api/AccountService.Repositories.AccountRepository.html
  commentId: T:AccountService.Repositories.AccountRepository
  fullName: AccountService.Repositories.AccountRepository
  nameWithType: AccountRepository
- uid: AccountService.Repositories.AccountRepository.#ctor(AccountService.Data.ApplicationDbContext)
  name: AccountRepository(ApplicationDbContext)
  href: api/AccountService.Repositories.AccountRepository.html#AccountService_Repositories_AccountRepository__ctor_AccountService_Data_ApplicationDbContext_
  commentId: M:AccountService.Repositories.AccountRepository.#ctor(AccountService.Data.ApplicationDbContext)
  name.vb: New(ApplicationDbContext)
  fullName: AccountService.Repositories.AccountRepository.AccountRepository(AccountService.Data.ApplicationDbContext)
  fullName.vb: AccountService.Repositories.AccountRepository.New(AccountService.Data.ApplicationDbContext)
  nameWithType: AccountRepository.AccountRepository(ApplicationDbContext)
  nameWithType.vb: AccountRepository.New(ApplicationDbContext)
- uid: AccountService.Repositories.AccountRepository.#ctor*
  name: AccountRepository
  href: api/AccountService.Repositories.AccountRepository.html#AccountService_Repositories_AccountRepository__ctor_
  commentId: Overload:AccountService.Repositories.AccountRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AccountService.Repositories.AccountRepository.AccountRepository
  fullName.vb: AccountService.Repositories.AccountRepository.New
  nameWithType: AccountRepository.AccountRepository
  nameWithType.vb: AccountRepository.New
- uid: AccountService.Repositories.AccountRepository.CreateAsync(AccountService.Models.Account)
  name: CreateAsync(Account)
  href: api/AccountService.Repositories.AccountRepository.html#AccountService_Repositories_AccountRepository_CreateAsync_AccountService_Models_Account_
  commentId: M:AccountService.Repositories.AccountRepository.CreateAsync(AccountService.Models.Account)
  fullName: AccountService.Repositories.AccountRepository.CreateAsync(AccountService.Models.Account)
  nameWithType: AccountRepository.CreateAsync(Account)
- uid: AccountService.Repositories.AccountRepository.CreateAsync*
  name: CreateAsync
  href: api/AccountService.Repositories.AccountRepository.html#AccountService_Repositories_AccountRepository_CreateAsync_
  commentId: Overload:AccountService.Repositories.AccountRepository.CreateAsync
  isSpec: "True"
  fullName: AccountService.Repositories.AccountRepository.CreateAsync
  nameWithType: AccountRepository.CreateAsync
- uid: AccountService.Repositories.AccountRepository.GetAllAsync
  name: GetAllAsync()
  href: api/AccountService.Repositories.AccountRepository.html#AccountService_Repositories_AccountRepository_GetAllAsync
  commentId: M:AccountService.Repositories.AccountRepository.GetAllAsync
  fullName: AccountService.Repositories.AccountRepository.GetAllAsync()
  nameWithType: AccountRepository.GetAllAsync()
- uid: AccountService.Repositories.AccountRepository.GetAllAsync*
  name: GetAllAsync
  href: api/AccountService.Repositories.AccountRepository.html#AccountService_Repositories_AccountRepository_GetAllAsync_
  commentId: Overload:AccountService.Repositories.AccountRepository.GetAllAsync
  isSpec: "True"
  fullName: AccountService.Repositories.AccountRepository.GetAllAsync
  nameWithType: AccountRepository.GetAllAsync
- uid: AccountService.Repositories.AccountRepository.GetByIdAsync(System.String)
  name: GetByIdAsync(string)
  href: api/AccountService.Repositories.AccountRepository.html#AccountService_Repositories_AccountRepository_GetByIdAsync_System_String_
  commentId: M:AccountService.Repositories.AccountRepository.GetByIdAsync(System.String)
  name.vb: GetByIdAsync(String)
  fullName: AccountService.Repositories.AccountRepository.GetByIdAsync(string)
  fullName.vb: AccountService.Repositories.AccountRepository.GetByIdAsync(String)
  nameWithType: AccountRepository.GetByIdAsync(string)
  nameWithType.vb: AccountRepository.GetByIdAsync(String)
- uid: AccountService.Repositories.AccountRepository.GetByIdAsync*
  name: GetByIdAsync
  href: api/AccountService.Repositories.AccountRepository.html#AccountService_Repositories_AccountRepository_GetByIdAsync_
  commentId: Overload:AccountService.Repositories.AccountRepository.GetByIdAsync
  isSpec: "True"
  fullName: AccountService.Repositories.AccountRepository.GetByIdAsync
  nameWithType: AccountRepository.GetByIdAsync
- uid: AccountService.Repositories.IAccountRepository
  name: IAccountRepository
  href: api/AccountService.Repositories.IAccountRepository.html
  commentId: T:AccountService.Repositories.IAccountRepository
  fullName: AccountService.Repositories.IAccountRepository
  nameWithType: IAccountRepository
- uid: AccountService.Repositories.IAccountRepository.CreateAsync(AccountService.Models.Account)
  name: CreateAsync(Account)
  href: api/AccountService.Repositories.IAccountRepository.html#AccountService_Repositories_IAccountRepository_CreateAsync_AccountService_Models_Account_
  commentId: M:AccountService.Repositories.IAccountRepository.CreateAsync(AccountService.Models.Account)
  fullName: AccountService.Repositories.IAccountRepository.CreateAsync(AccountService.Models.Account)
  nameWithType: IAccountRepository.CreateAsync(Account)
- uid: AccountService.Repositories.IAccountRepository.CreateAsync*
  name: CreateAsync
  href: api/AccountService.Repositories.IAccountRepository.html#AccountService_Repositories_IAccountRepository_CreateAsync_
  commentId: Overload:AccountService.Repositories.IAccountRepository.CreateAsync
  isSpec: "True"
  fullName: AccountService.Repositories.IAccountRepository.CreateAsync
  nameWithType: IAccountRepository.CreateAsync
- uid: AccountService.Repositories.IAccountRepository.GetAllAsync
  name: GetAllAsync()
  href: api/AccountService.Repositories.IAccountRepository.html#AccountService_Repositories_IAccountRepository_GetAllAsync
  commentId: M:AccountService.Repositories.IAccountRepository.GetAllAsync
  fullName: AccountService.Repositories.IAccountRepository.GetAllAsync()
  nameWithType: IAccountRepository.GetAllAsync()
- uid: AccountService.Repositories.IAccountRepository.GetAllAsync*
  name: GetAllAsync
  href: api/AccountService.Repositories.IAccountRepository.html#AccountService_Repositories_IAccountRepository_GetAllAsync_
  commentId: Overload:AccountService.Repositories.IAccountRepository.GetAllAsync
  isSpec: "True"
  fullName: AccountService.Repositories.IAccountRepository.GetAllAsync
  nameWithType: IAccountRepository.GetAllAsync
- uid: AccountService.Repositories.IAccountRepository.GetByIdAsync(System.String)
  name: GetByIdAsync(string)
  href: api/AccountService.Repositories.IAccountRepository.html#AccountService_Repositories_IAccountRepository_GetByIdAsync_System_String_
  commentId: M:AccountService.Repositories.IAccountRepository.GetByIdAsync(System.String)
  name.vb: GetByIdAsync(String)
  fullName: AccountService.Repositories.IAccountRepository.GetByIdAsync(string)
  fullName.vb: AccountService.Repositories.IAccountRepository.GetByIdAsync(String)
  nameWithType: IAccountRepository.GetByIdAsync(string)
  nameWithType.vb: IAccountRepository.GetByIdAsync(String)
- uid: AccountService.Repositories.IAccountRepository.GetByIdAsync*
  name: GetByIdAsync
  href: api/AccountService.Repositories.IAccountRepository.html#AccountService_Repositories_IAccountRepository_GetByIdAsync_
  commentId: Overload:AccountService.Repositories.IAccountRepository.GetByIdAsync
  isSpec: "True"
  fullName: AccountService.Repositories.IAccountRepository.GetByIdAsync
  nameWithType: IAccountRepository.GetByIdAsync
- uid: AccountService.Services
  name: AccountService.Services
  href: api/AccountService.Services.html
  commentId: N:AccountService.Services
  fullName: AccountService.Services
  nameWithType: AccountService.Services
- uid: AccountService.Services.AccountService
  name: AccountService
  href: api/AccountService.Services.AccountService.html
  commentId: T:AccountService.Services.AccountService
  fullName: AccountService.Services.AccountService
  nameWithType: AccountService
- uid: AccountService.Services.AccountService.#ctor(AccountService.Repositories.IAccountRepository)
  name: AccountService(IAccountRepository)
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService__ctor_AccountService_Repositories_IAccountRepository_
  commentId: M:AccountService.Services.AccountService.#ctor(AccountService.Repositories.IAccountRepository)
  name.vb: New(IAccountRepository)
  fullName: AccountService.Services.AccountService.AccountService(AccountService.Repositories.IAccountRepository)
  fullName.vb: AccountService.Services.AccountService.New(AccountService.Repositories.IAccountRepository)
  nameWithType: AccountService.AccountService(IAccountRepository)
  nameWithType.vb: AccountService.New(IAccountRepository)
- uid: AccountService.Services.AccountService.#ctor*
  name: AccountService
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService__ctor_
  commentId: Overload:AccountService.Services.AccountService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AccountService.Services.AccountService.AccountService
  fullName.vb: AccountService.Services.AccountService.New
  nameWithType: AccountService.AccountService
  nameWithType.vb: AccountService.New
- uid: AccountService.Services.AccountService.CreateAccountAsync(AccountService.DTOs.CreateAccountDto)
  name: CreateAccountAsync(CreateAccountDto)
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_CreateAccountAsync_AccountService_DTOs_CreateAccountDto_
  commentId: M:AccountService.Services.AccountService.CreateAccountAsync(AccountService.DTOs.CreateAccountDto)
  fullName: AccountService.Services.AccountService.CreateAccountAsync(AccountService.DTOs.CreateAccountDto)
  nameWithType: AccountService.CreateAccountAsync(CreateAccountDto)
- uid: AccountService.Services.AccountService.CreateAccountAsync*
  name: CreateAccountAsync
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_CreateAccountAsync_
  commentId: Overload:AccountService.Services.AccountService.CreateAccountAsync
  isSpec: "True"
  fullName: AccountService.Services.AccountService.CreateAccountAsync
  nameWithType: AccountService.CreateAccountAsync
- uid: AccountService.Services.AccountService.DeleteAccountAsync(System.String)
  name: DeleteAccountAsync(string)
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_DeleteAccountAsync_System_String_
  commentId: M:AccountService.Services.AccountService.DeleteAccountAsync(System.String)
  name.vb: DeleteAccountAsync(String)
  fullName: AccountService.Services.AccountService.DeleteAccountAsync(string)
  fullName.vb: AccountService.Services.AccountService.DeleteAccountAsync(String)
  nameWithType: AccountService.DeleteAccountAsync(string)
  nameWithType.vb: AccountService.DeleteAccountAsync(String)
- uid: AccountService.Services.AccountService.DeleteAccountAsync*
  name: DeleteAccountAsync
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_DeleteAccountAsync_
  commentId: Overload:AccountService.Services.AccountService.DeleteAccountAsync
  isSpec: "True"
  fullName: AccountService.Services.AccountService.DeleteAccountAsync
  nameWithType: AccountService.DeleteAccountAsync
- uid: AccountService.Services.AccountService.GetAccountAsync(System.String)
  name: GetAccountAsync(string)
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_GetAccountAsync_System_String_
  commentId: M:AccountService.Services.AccountService.GetAccountAsync(System.String)
  name.vb: GetAccountAsync(String)
  fullName: AccountService.Services.AccountService.GetAccountAsync(string)
  fullName.vb: AccountService.Services.AccountService.GetAccountAsync(String)
  nameWithType: AccountService.GetAccountAsync(string)
  nameWithType.vb: AccountService.GetAccountAsync(String)
- uid: AccountService.Services.AccountService.GetAccountAsync*
  name: GetAccountAsync
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_GetAccountAsync_
  commentId: Overload:AccountService.Services.AccountService.GetAccountAsync
  isSpec: "True"
  fullName: AccountService.Services.AccountService.GetAccountAsync
  nameWithType: AccountService.GetAccountAsync
- uid: AccountService.Services.AccountService.GetAllAccountsAsync
  name: GetAllAccountsAsync()
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_GetAllAccountsAsync
  commentId: M:AccountService.Services.AccountService.GetAllAccountsAsync
  fullName: AccountService.Services.AccountService.GetAllAccountsAsync()
  nameWithType: AccountService.GetAllAccountsAsync()
- uid: AccountService.Services.AccountService.GetAllAccountsAsync*
  name: GetAllAccountsAsync
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_GetAllAccountsAsync_
  commentId: Overload:AccountService.Services.AccountService.GetAllAccountsAsync
  isSpec: "True"
  fullName: AccountService.Services.AccountService.GetAllAccountsAsync
  nameWithType: AccountService.GetAllAccountsAsync
- uid: AccountService.Services.AccountService.UpdateAccountAsync(System.String,AccountService.DTOs.UpdateAccountDto)
  name: UpdateAccountAsync(string, UpdateAccountDto)
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_UpdateAccountAsync_System_String_AccountService_DTOs_UpdateAccountDto_
  commentId: M:AccountService.Services.AccountService.UpdateAccountAsync(System.String,AccountService.DTOs.UpdateAccountDto)
  name.vb: UpdateAccountAsync(String, UpdateAccountDto)
  fullName: AccountService.Services.AccountService.UpdateAccountAsync(string, AccountService.DTOs.UpdateAccountDto)
  fullName.vb: AccountService.Services.AccountService.UpdateAccountAsync(String, AccountService.DTOs.UpdateAccountDto)
  nameWithType: AccountService.UpdateAccountAsync(string, UpdateAccountDto)
  nameWithType.vb: AccountService.UpdateAccountAsync(String, UpdateAccountDto)
- uid: AccountService.Services.AccountService.UpdateAccountAsync*
  name: UpdateAccountAsync
  href: api/AccountService.Services.AccountService.html#AccountService_Services_AccountService_UpdateAccountAsync_
  commentId: Overload:AccountService.Services.AccountService.UpdateAccountAsync
  isSpec: "True"
  fullName: AccountService.Services.AccountService.UpdateAccountAsync
  nameWithType: AccountService.UpdateAccountAsync
- uid: AccountService.Services.IAccountService
  name: IAccountService
  href: api/AccountService.Services.IAccountService.html
  commentId: T:AccountService.Services.IAccountService
  fullName: AccountService.Services.IAccountService
  nameWithType: IAccountService
- uid: AccountService.Services.IAccountService.CreateAccountAsync(AccountService.DTOs.CreateAccountDto)
  name: CreateAccountAsync(CreateAccountDto)
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_CreateAccountAsync_AccountService_DTOs_CreateAccountDto_
  commentId: M:AccountService.Services.IAccountService.CreateAccountAsync(AccountService.DTOs.CreateAccountDto)
  fullName: AccountService.Services.IAccountService.CreateAccountAsync(AccountService.DTOs.CreateAccountDto)
  nameWithType: IAccountService.CreateAccountAsync(CreateAccountDto)
- uid: AccountService.Services.IAccountService.CreateAccountAsync*
  name: CreateAccountAsync
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_CreateAccountAsync_
  commentId: Overload:AccountService.Services.IAccountService.CreateAccountAsync
  isSpec: "True"
  fullName: AccountService.Services.IAccountService.CreateAccountAsync
  nameWithType: IAccountService.CreateAccountAsync
- uid: AccountService.Services.IAccountService.DeleteAccountAsync(System.String)
  name: DeleteAccountAsync(string)
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_DeleteAccountAsync_System_String_
  commentId: M:AccountService.Services.IAccountService.DeleteAccountAsync(System.String)
  name.vb: DeleteAccountAsync(String)
  fullName: AccountService.Services.IAccountService.DeleteAccountAsync(string)
  fullName.vb: AccountService.Services.IAccountService.DeleteAccountAsync(String)
  nameWithType: IAccountService.DeleteAccountAsync(string)
  nameWithType.vb: IAccountService.DeleteAccountAsync(String)
- uid: AccountService.Services.IAccountService.DeleteAccountAsync*
  name: DeleteAccountAsync
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_DeleteAccountAsync_
  commentId: Overload:AccountService.Services.IAccountService.DeleteAccountAsync
  isSpec: "True"
  fullName: AccountService.Services.IAccountService.DeleteAccountAsync
  nameWithType: IAccountService.DeleteAccountAsync
- uid: AccountService.Services.IAccountService.GetAccountAsync(System.String)
  name: GetAccountAsync(string)
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_GetAccountAsync_System_String_
  commentId: M:AccountService.Services.IAccountService.GetAccountAsync(System.String)
  name.vb: GetAccountAsync(String)
  fullName: AccountService.Services.IAccountService.GetAccountAsync(string)
  fullName.vb: AccountService.Services.IAccountService.GetAccountAsync(String)
  nameWithType: IAccountService.GetAccountAsync(string)
  nameWithType.vb: IAccountService.GetAccountAsync(String)
- uid: AccountService.Services.IAccountService.GetAccountAsync*
  name: GetAccountAsync
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_GetAccountAsync_
  commentId: Overload:AccountService.Services.IAccountService.GetAccountAsync
  isSpec: "True"
  fullName: AccountService.Services.IAccountService.GetAccountAsync
  nameWithType: IAccountService.GetAccountAsync
- uid: AccountService.Services.IAccountService.GetAllAccountsAsync
  name: GetAllAccountsAsync()
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_GetAllAccountsAsync
  commentId: M:AccountService.Services.IAccountService.GetAllAccountsAsync
  fullName: AccountService.Services.IAccountService.GetAllAccountsAsync()
  nameWithType: IAccountService.GetAllAccountsAsync()
- uid: AccountService.Services.IAccountService.GetAllAccountsAsync*
  name: GetAllAccountsAsync
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_GetAllAccountsAsync_
  commentId: Overload:AccountService.Services.IAccountService.GetAllAccountsAsync
  isSpec: "True"
  fullName: AccountService.Services.IAccountService.GetAllAccountsAsync
  nameWithType: IAccountService.GetAllAccountsAsync
- uid: AccountService.Services.IAccountService.UpdateAccountAsync(System.String,AccountService.DTOs.UpdateAccountDto)
  name: UpdateAccountAsync(string, UpdateAccountDto)
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_UpdateAccountAsync_System_String_AccountService_DTOs_UpdateAccountDto_
  commentId: M:AccountService.Services.IAccountService.UpdateAccountAsync(System.String,AccountService.DTOs.UpdateAccountDto)
  name.vb: UpdateAccountAsync(String, UpdateAccountDto)
  fullName: AccountService.Services.IAccountService.UpdateAccountAsync(string, AccountService.DTOs.UpdateAccountDto)
  fullName.vb: AccountService.Services.IAccountService.UpdateAccountAsync(String, AccountService.DTOs.UpdateAccountDto)
  nameWithType: IAccountService.UpdateAccountAsync(string, UpdateAccountDto)
  nameWithType.vb: IAccountService.UpdateAccountAsync(String, UpdateAccountDto)
- uid: AccountService.Services.IAccountService.UpdateAccountAsync*
  name: UpdateAccountAsync
  href: api/AccountService.Services.IAccountService.html#AccountService_Services_IAccountService_UpdateAccountAsync_
  commentId: Overload:AccountService.Services.IAccountService.UpdateAccountAsync
  isSpec: "True"
  fullName: AccountService.Services.IAccountService.UpdateAccountAsync
  nameWithType: IAccountService.UpdateAccountAsync
